/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication2;


import java.util.ArrayList;
import java.util.Collection;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author dirief
 */
public class TwoPlayerHangman extends javax.swing.JFrame {

    /**
     * Creates new form TwoPlayerHangman
     */
    public TwoPlayerHangman() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    static String GameWord;
    int score=0;
    int errorcount=0;
    int GameWordLength;
    String EmptyGameWord =("");
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        A = new javax.swing.JButton();
        B = new javax.swing.JButton();
        C = new javax.swing.JButton();
        D = new javax.swing.JButton();
        E = new javax.swing.JButton();
        F = new javax.swing.JButton();
        G = new javax.swing.JButton();
        H = new javax.swing.JButton();
        J = new javax.swing.JButton();
        S = new javax.swing.JButton();
        K = new javax.swing.JButton();
        T = new javax.swing.JButton();
        I = new javax.swing.JButton();
        L = new javax.swing.JButton();
        M = new javax.swing.JButton();
        N = new javax.swing.JButton();
        O = new javax.swing.JButton();
        P = new javax.swing.JButton();
        U = new javax.swing.JButton();
        V = new javax.swing.JButton();
        Q = new javax.swing.JButton();
        R = new javax.swing.JButton();
        Z = new javax.swing.JButton();
        Y = new javax.swing.JButton();
        X = new javax.swing.JButton();
        W = new javax.swing.JButton();
        HangmanPic = new javax.swing.JLabel();
        EnterWord = new javax.swing.JLabel();
        GameWordField = new javax.swing.JTextField();
        ConfirmGameWord = new javax.swing.JButton();
        GameWordLine = new javax.swing.JLabel();
        ScoreLabel = new javax.swing.JLabel();
        ScoreCounter = new javax.swing.JLabel();
        ScoreConfirm = new javax.swing.JButton();
        WinLabel = new javax.swing.JLabel();
        HaventWonLabel = new javax.swing.JLabel();
        HangmanPicError1 = new javax.swing.JLabel();
        HangmanPicError2 = new javax.swing.JLabel();
        HangmanPicError3 = new javax.swing.JLabel();
        HangmanPicError4 = new javax.swing.JLabel();
        HangmanPicError5 = new javax.swing.JLabel();
        HangmanPicError6 = new javax.swing.JLabel();
        HangmanPicError7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 255));
        setForeground(new java.awt.Color(153, 255, 255));
        setPreferredSize(new java.awt.Dimension(720, 632));

        A.setBackground(new java.awt.Color(102, 255, 255));
        A.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        A.setForeground(new java.awt.Color(51, 153, 255));
        A.setText("A");
        A.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        A.setMargin(new java.awt.Insets(1, 1, 1, 1));
        A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AActionPerformed(evt);
            }
        });

        B.setBackground(new java.awt.Color(102, 255, 255));
        B.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        B.setForeground(new java.awt.Color(51, 153, 255));
        B.setText("B");
        B.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        B.setMargin(new java.awt.Insets(1, 1, 1, 1));
        B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BActionPerformed(evt);
            }
        });

        C.setBackground(new java.awt.Color(102, 255, 255));
        C.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        C.setForeground(new java.awt.Color(51, 153, 255));
        C.setText("C");
        C.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        C.setMargin(new java.awt.Insets(1, 1, 1, 1));
        C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CActionPerformed(evt);
            }
        });

        D.setBackground(new java.awt.Color(102, 255, 255));
        D.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        D.setForeground(new java.awt.Color(51, 153, 255));
        D.setText("D");
        D.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        D.setMargin(new java.awt.Insets(1, 1, 1, 1));
        D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DActionPerformed(evt);
            }
        });

        E.setBackground(new java.awt.Color(102, 255, 255));
        E.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        E.setForeground(new java.awt.Color(51, 153, 255));
        E.setText("E");
        E.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        E.setMargin(new java.awt.Insets(1, 1, 1, 1));
        E.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EActionPerformed(evt);
            }
        });

        F.setBackground(new java.awt.Color(102, 255, 255));
        F.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        F.setForeground(new java.awt.Color(51, 153, 255));
        F.setText("F");
        F.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        F.setMargin(new java.awt.Insets(1, 1, 1, 1));
        F.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FActionPerformed(evt);
            }
        });

        G.setBackground(new java.awt.Color(102, 255, 255));
        G.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        G.setForeground(new java.awt.Color(51, 153, 255));
        G.setText("G");
        G.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        G.setMargin(new java.awt.Insets(1, 1, 1, 1));
        G.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GActionPerformed(evt);
            }
        });

        H.setBackground(new java.awt.Color(102, 255, 255));
        H.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        H.setForeground(new java.awt.Color(51, 153, 255));
        H.setText("H");
        H.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        H.setMargin(new java.awt.Insets(1, 1, 1, 1));
        H.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HActionPerformed(evt);
            }
        });

        J.setBackground(new java.awt.Color(102, 255, 255));
        J.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        J.setForeground(new java.awt.Color(51, 153, 255));
        J.setText("J");
        J.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        J.setMargin(new java.awt.Insets(1, 1, 1, 1));
        J.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JActionPerformed(evt);
            }
        });

        S.setBackground(new java.awt.Color(102, 255, 255));
        S.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        S.setForeground(new java.awt.Color(51, 153, 255));
        S.setText("S");
        S.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        S.setMargin(new java.awt.Insets(1, 1, 1, 1));
        S.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SActionPerformed(evt);
            }
        });

        K.setBackground(new java.awt.Color(102, 255, 255));
        K.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        K.setForeground(new java.awt.Color(51, 153, 255));
        K.setText("K");
        K.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        K.setMargin(new java.awt.Insets(1, 1, 1, 1));
        K.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KActionPerformed(evt);
            }
        });

        T.setBackground(new java.awt.Color(102, 255, 255));
        T.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        T.setForeground(new java.awt.Color(51, 153, 255));
        T.setText("T");
        T.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        T.setMargin(new java.awt.Insets(1, 1, 1, 1));
        T.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TActionPerformed(evt);
            }
        });

        I.setBackground(new java.awt.Color(102, 255, 255));
        I.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        I.setForeground(new java.awt.Color(51, 153, 255));
        I.setText("I");
        I.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        I.setMargin(new java.awt.Insets(1, 1, 1, 1));
        I.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IActionPerformed(evt);
            }
        });

        L.setBackground(new java.awt.Color(102, 255, 255));
        L.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        L.setForeground(new java.awt.Color(51, 153, 255));
        L.setText("L");
        L.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        L.setMargin(new java.awt.Insets(1, 1, 1, 1));
        L.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LActionPerformed(evt);
            }
        });

        M.setBackground(new java.awt.Color(102, 255, 255));
        M.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        M.setForeground(new java.awt.Color(51, 153, 255));
        M.setText("M");
        M.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        M.setMargin(new java.awt.Insets(1, 1, 1, 1));
        M.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MActionPerformed(evt);
            }
        });

        N.setBackground(new java.awt.Color(102, 255, 255));
        N.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        N.setForeground(new java.awt.Color(51, 153, 255));
        N.setText("N");
        N.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        N.setMargin(new java.awt.Insets(1, 1, 1, 1));
        N.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NActionPerformed(evt);
            }
        });

        O.setBackground(new java.awt.Color(102, 255, 255));
        O.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        O.setForeground(new java.awt.Color(51, 153, 255));
        O.setText("O");
        O.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        O.setMargin(new java.awt.Insets(1, 1, 1, 1));
        O.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OActionPerformed(evt);
            }
        });

        P.setBackground(new java.awt.Color(102, 255, 255));
        P.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        P.setForeground(new java.awt.Color(51, 153, 255));
        P.setText("P");
        P.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        P.setMargin(new java.awt.Insets(1, 1, 1, 1));
        P.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PActionPerformed(evt);
            }
        });

        U.setBackground(new java.awt.Color(102, 255, 255));
        U.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        U.setForeground(new java.awt.Color(51, 153, 255));
        U.setText("U");
        U.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        U.setMargin(new java.awt.Insets(1, 1, 1, 1));
        U.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UActionPerformed(evt);
            }
        });

        V.setBackground(new java.awt.Color(102, 255, 255));
        V.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        V.setForeground(new java.awt.Color(51, 153, 255));
        V.setText("V");
        V.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        V.setMargin(new java.awt.Insets(1, 1, 1, 1));
        V.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VActionPerformed(evt);
            }
        });

        Q.setBackground(new java.awt.Color(102, 255, 255));
        Q.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        Q.setForeground(new java.awt.Color(51, 153, 255));
        Q.setText("Q");
        Q.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        Q.setMargin(new java.awt.Insets(1, 1, 1, 1));
        Q.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QActionPerformed(evt);
            }
        });

        R.setBackground(new java.awt.Color(102, 255, 255));
        R.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        R.setForeground(new java.awt.Color(51, 153, 255));
        R.setText("R");
        R.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        R.setMargin(new java.awt.Insets(1, 1, 1, 1));
        R.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RActionPerformed(evt);
            }
        });

        Z.setBackground(new java.awt.Color(102, 255, 255));
        Z.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        Z.setForeground(new java.awt.Color(51, 153, 255));
        Z.setText("Z");
        Z.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        Z.setMargin(new java.awt.Insets(1, 1, 1, 1));
        Z.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZActionPerformed(evt);
            }
        });

        Y.setBackground(new java.awt.Color(102, 255, 255));
        Y.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        Y.setForeground(new java.awt.Color(51, 153, 255));
        Y.setText("Y");
        Y.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        Y.setMargin(new java.awt.Insets(1, 1, 1, 1));
        Y.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YActionPerformed(evt);
            }
        });

        X.setBackground(new java.awt.Color(102, 255, 255));
        X.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        X.setForeground(new java.awt.Color(51, 153, 255));
        X.setText("X");
        X.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        X.setMargin(new java.awt.Insets(1, 1, 1, 1));
        X.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XActionPerformed(evt);
            }
        });

        W.setBackground(new java.awt.Color(102, 255, 255));
        W.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        W.setForeground(new java.awt.Color(51, 153, 255));
        W.setText("W");
        W.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        W.setMargin(new java.awt.Insets(1, 1, 1, 1));
        W.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WActionPerformed(evt);
            }
        });

        HangmanPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication2/newpackage/start.png"))); // NOI18N
        HangmanPic.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        HangmanPic.setMinimumSize(new java.awt.Dimension(36, 44));

        EnterWord.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        EnterWord.setForeground(new java.awt.Color(51, 153, 255));
        EnterWord.setText("Player 1: Enter Word for Player 2 to guess!");

        GameWordField.setBackground(new java.awt.Color(102, 255, 255));
        GameWordField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        GameWordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GameWordFieldActionPerformed(evt);
            }
        });

        ConfirmGameWord.setBackground(new java.awt.Color(102, 255, 255));
        ConfirmGameWord.setText("CONFIRM WORD");
        ConfirmGameWord.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        ConfirmGameWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmGameWordActionPerformed(evt);
            }
        });

        GameWordLine.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        GameWordLine.setForeground(new java.awt.Color(51, 153, 255));

        ScoreLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ScoreLabel.setForeground(new java.awt.Color(51, 153, 255));
        ScoreLabel.setText("Score:");

        ScoreCounter.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ScoreCounter.setForeground(new java.awt.Color(51, 153, 255));

        ScoreConfirm.setBackground(new java.awt.Color(102, 255, 255));
        ScoreConfirm.setText("Click here when you have fully guessed the word.");
        ScoreConfirm.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        ScoreConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScoreConfirmActionPerformed(evt);
            }
        });

        WinLabel.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        WinLabel.setForeground(new java.awt.Color(0, 255, 0));
        WinLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        HaventWonLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        HaventWonLabel.setForeground(new java.awt.Color(255, 0, 51));
        HaventWonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        HangmanPicError1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication2/newpackage/1error.png"))); // NOI18N
        HangmanPicError1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        HangmanPicError1.setMinimumSize(new java.awt.Dimension(36, 44));
        HangmanPicError1.setVisible(false);

        HangmanPicError2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication2/newpackage/2error.png"))); // NOI18N
        HangmanPicError2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        HangmanPicError2.setMinimumSize(new java.awt.Dimension(36, 44));
        HangmanPicError2.setVisible(false);

        HangmanPicError3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication2/newpackage/3error.png"))); // NOI18N
        HangmanPicError3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        HangmanPicError3.setMinimumSize(new java.awt.Dimension(36, 44));
        HangmanPicError3.setVisible(false);

        HangmanPicError4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication2/newpackage/4error.png"))); // NOI18N
        HangmanPicError4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        HangmanPicError4.setMinimumSize(new java.awt.Dimension(36, 44));
        HangmanPicError4.setVisible(false);

        HangmanPicError5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication2/newpackage/5error.png"))); // NOI18N
        HangmanPicError5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        HangmanPicError5.setMinimumSize(new java.awt.Dimension(36, 44));
        HangmanPicError5.setVisible(false);

        HangmanPicError6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication2/newpackage/6error.png"))); // NOI18N
        HangmanPicError6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        HangmanPicError6.setMinimumSize(new java.awt.Dimension(36, 44));
        HangmanPicError6.setVisible(false);

        HangmanPicError7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication2/newpackage/7error.png"))); // NOI18N
        HangmanPicError7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 3, true));
        HangmanPicError7.setMinimumSize(new java.awt.Dimension(36, 44));
        HangmanPicError7.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(C, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(E, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(F, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(G, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(H, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(I, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(J, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(K, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(L, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(M, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(N, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(O, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(P, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Q, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(S, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(T, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(U, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(V, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(W, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(X, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Y, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Z, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(R, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(HangmanPic, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(EnterWord, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
                                .addComponent(ConfirmGameWord)
                                .addComponent(GameWordLine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(ScoreLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(ScoreCounter))
                                .addComponent(ScoreConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(GameWordField, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(WinLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HaventWonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(HangmanPicError1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(670, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(30, 30, 30)
                    .addComponent(HangmanPicError2, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(660, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(40, 40, 40)
                    .addComponent(HangmanPicError3, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(650, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(50, 50, 50)
                    .addComponent(HangmanPicError4, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(640, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(60, 60, 60)
                    .addComponent(HangmanPicError5, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(630, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(70, 70, 70)
                    .addComponent(HangmanPicError6, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(620, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(80, 80, 80)
                    .addComponent(HangmanPicError7, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(610, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(HangmanPic, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(B, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(C, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(E, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(F, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(G, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(H, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(I, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(J, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(K, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(L, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(M, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(N, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(O, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(P, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Q, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(S, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(T, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(U, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Z, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Y, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(X, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(W, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(V, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(EnterWord)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GameWordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ConfirmGameWord)
                        .addGap(32, 32, 32)
                        .addComponent(GameWordLine)
                        .addGap(103, 103, 103)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ScoreLabel)
                            .addComponent(ScoreCounter))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ScoreConfirm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(WinLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HaventWonLabel)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(HangmanPicError1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(183, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(31, 31, 31)
                    .addComponent(HangmanPicError2, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(173, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(41, 41, 41)
                    .addComponent(HangmanPicError3, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(163, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(51, 51, 51)
                    .addComponent(HangmanPicError4, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(153, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(61, 61, 61)
                    .addComponent(HangmanPicError5, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(143, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(71, 71, 71)
                    .addComponent(HangmanPicError6, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(133, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(81, 81, 81)
                    .addComponent(HangmanPicError7, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(123, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GameWordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GameWordFieldActionPerformed
 
    }//GEN-LAST:event_GameWordFieldActionPerformed

    private void ConfirmGameWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmGameWordActionPerformed
        String GameWord = GameWordField.getText();
        score=0;
        EmptyGameWord=("");
        //Takes game word and covers it in blanks
        for (int i = 0; i < GameWord.length(); i++) {
            if (GameWord.charAt(i) == (' ')) {
                EmptyGameWord += "  ";
            } else {
                EmptyGameWord += "-";
            }

        }
       GameWordLine.setText(EmptyGameWord);
       ScoreCounter.setText(String.valueOf(score));
       GameWordLength = GameWord.length();
       WinLabel.setText("");
       HaventWonLabel.setText("");
    }//GEN-LAST:event_ConfirmGameWordActionPerformed

    private void AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AActionPerformed
        String GameWord = GameWordField.getText();
        int i=0;
        errorcount=0;
        //while(i<GameWord.length()) {
        for (i=0; i<GameWord.length(); i++){
            if (GameWord.charAt(i) == ('a')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'a';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            else {
                errorcount = 1;
            }
            //i++;
        }
        GameWordLine.setText(EmptyGameWord);
        A.setVisible(false);
        if (errorcount == 1){
        HangmanPicError1.setVisible(true);
        HangmanPic.setVisible(false);
        }
    }//GEN-LAST:event_AActionPerformed

    private void BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('b')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'b';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_BActionPerformed

    private void CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('c')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'c';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_CActionPerformed

    private void DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('d')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'd';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_DActionPerformed

    private void EActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('e')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'e';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_EActionPerformed

    private void FActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('f')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'f';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_FActionPerformed

    private void GActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('g')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'g';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_GActionPerformed

    private void HActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('h')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'h';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_HActionPerformed

    private void IActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('i')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'i';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_IActionPerformed

    private void JActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('j')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'j';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_JActionPerformed

    private void KActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('k')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'k';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_KActionPerformed

    private void LActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('l')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'l';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_LActionPerformed

    private void MActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('m')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'm';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_MActionPerformed

    private void NActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('n')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'n';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_NActionPerformed

    private void OActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('o')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'o';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_OActionPerformed

    private void PActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('p')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'p';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_PActionPerformed

    private void QActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('q')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'q';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_QActionPerformed

    private void RActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('r')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'r';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_RActionPerformed

    private void SActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('s')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 's';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_SActionPerformed

    private void TActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('t')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 't';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_TActionPerformed

    private void UActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('u')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'u';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_UActionPerformed

    private void VActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('v')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'v';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_VActionPerformed

    private void WActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('w')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'w';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_WActionPerformed

    private void XActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('x')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'x';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_XActionPerformed

    private void YActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('y')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'y';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_YActionPerformed

    private void ZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZActionPerformed
        String GameWord = GameWordField.getText();
        int i = 0;
        while (i < GameWord.length()) {
            if (GameWord.charAt(i) == ('z')) {
                char[] myNameChars = EmptyGameWord.toCharArray();
                myNameChars[i] = 'z';
                EmptyGameWord = String.valueOf(myNameChars);
                score++;
                ScoreCounter.setText(String.valueOf(score));
            }
            i++;
        }
        GameWordLine.setText(EmptyGameWord);
    }//GEN-LAST:event_ZActionPerformed

    private void ScoreConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScoreConfirmActionPerformed
        if (score >= GameWordLength){
            WinLabel.setText("YOU WIN!");
            HaventWonLabel.setText("");
        }
        else {
            HaventWonLabel.setText("You haven't won yet. Keep going!");
            WinLabel.setText("");
        }
    }//GEN-LAST:event_ScoreConfirmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TwoPlayerHangman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TwoPlayerHangman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TwoPlayerHangman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TwoPlayerHangman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TwoPlayerHangman().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton A;
    private javax.swing.JButton B;
    private javax.swing.JButton C;
    public javax.swing.JButton ConfirmGameWord;
    private javax.swing.JButton D;
    private javax.swing.JButton E;
    private javax.swing.JLabel EnterWord;
    private javax.swing.JButton F;
    private javax.swing.JButton G;
    private javax.swing.JTextField GameWordField;
    private javax.swing.JLabel GameWordLine;
    private javax.swing.JButton H;
    private javax.swing.JLabel HangmanPic;
    private javax.swing.JLabel HangmanPicError1;
    private javax.swing.JLabel HangmanPicError2;
    private javax.swing.JLabel HangmanPicError3;
    private javax.swing.JLabel HangmanPicError4;
    private javax.swing.JLabel HangmanPicError5;
    private javax.swing.JLabel HangmanPicError6;
    private javax.swing.JLabel HangmanPicError7;
    private javax.swing.JLabel HaventWonLabel;
    private javax.swing.JButton I;
    private javax.swing.JButton J;
    private javax.swing.JButton K;
    private javax.swing.JButton L;
    private javax.swing.JButton M;
    private javax.swing.JButton N;
    private javax.swing.JButton O;
    private javax.swing.JButton P;
    private javax.swing.JButton Q;
    private javax.swing.JButton R;
    private javax.swing.JButton S;
    private javax.swing.JButton ScoreConfirm;
    private javax.swing.JLabel ScoreCounter;
    private javax.swing.JLabel ScoreLabel;
    private javax.swing.JButton T;
    private javax.swing.JButton U;
    private javax.swing.JButton V;
    private javax.swing.JButton W;
    private javax.swing.JLabel WinLabel;
    private javax.swing.JButton X;
    private javax.swing.JButton Y;
    private javax.swing.JButton Z;
    // End of variables declaration//GEN-END:variables
}
